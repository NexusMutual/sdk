# Release Next Workflow
#
# This workflow is responsible for creating and publishing release candidate (RC) versions
# to npm with the '@next' tag when changes are pushed to the dev branch.
#
# Workflow Behavior:
# - Triggered on push to dev branch
# - Checks if commits since the last tag warrant a version bump using conventional commits
# - If a version bump is needed, publishes an RC version to npm with the '@next' tag
# - RC versions follow the pattern: {new_version}-rc{number} (e.g., 1.2.0-rc1, 1.2.0-rc2)
# - RC number increments for each new RC of the same base version
#
# Scenarios:
# 1. Feature branch merged to dev with commits that trigger a version bump:
#    - Workflow determines the next semantic version (e.g., 0.2.0 from 0.1.0)
#    - Publishes first RC (e.g., 0.2.0-rc1) or increments RC number (e.g., 0.2.0-rc2)
#    - No commits are made to the repository, only published to npm
#
# 2. Feature branch merged to dev with commits that don't trigger a version bump:
#    - Workflow exits early with no action
#
# 3. Version bump commit from master rebased to dev (via release.yml workflow):
#    - Contains [skip ci] in the commit message to prevent this workflow from running
#    - Prevents publishing RC versions based on the version bump commit itself
#
# NOTE: This workflow does NOT commit any changes to git. It only publishes to npm.
# The actual version bump commit happens in the main release.yml workflow.

name: Release next

on:
  push:
    branches:
      - dev

env:
  NODE_VERSION: 22
  PROVIDER_URL: ${{ secrets.PROVIDER_URL }}

jobs:
  # First step: Determine if the commits since last tag require a version bump
  # Outputs:
  # - bump_type: The type of semantic version bump (major, minor, patch)
  # - triggers_bump: 'true' if a version bump is needed, 'false' otherwise
  check-version-bump:
    uses: NexusMutual/workflows/.github/workflows/check-version-bump.yml@master
    with:
      ref: ${{ github.ref_name }}
      environment: production
      bump-command: |
        timeout 5s npx conventional-recommended-bump --config .github/config/conventional-bump-setup.js
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  # Second step: Determine the RC version number
  # This job only runs if a version bump is needed
  # NOTE: the version bump is not committed to the repository, it is only used to determine the RC version
  # Outputs:
  # - rc_version: The next rc version based on the new base version and existing RC versions
  rc-version:
    needs: check-version-bump
    if: needs.check-version-bump.outputs.triggers_bump == 'true'
    uses: NexusMutual/workflows/.github/workflows/determine-rc-version.yml@master
    with:
      package-name: $(jq -r .name package.json)
      bump-type: ${{ needs.check-version-bump.outputs.bump_type }}

  # Third step: Build and run checks on the code
  # This job runs automatically when rc-version completes
  build-and-checks:
    runs-on: ubuntu-22.04
    needs: rc-version
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --ignore-scripts --prefer-offline --no-audit --no-fund

      # Run build script to generate `/generated` dir which is needed by ts:check and test scripts
      - name: Build package
        run: npm run build

      - name: Run linter
        run: npm run lint

      - name: Check types and typescript
        run: npm run ts:check

      - name: Run tests
        run: npm run test

      # Save the build artifacts for the publish job
      - uses: actions/upload-artifact@v4
        with:
          name: sdk-next-${{ needs.rc-version.outputs.rc_version }}
          path: dist

  # Final step: Publish the RC version to npm with the '@next' tag
  publish:
    runs-on: ubuntu-22.04
    needs: [rc-version, build-and-checks]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      # Download the build artifacts from the build-and-checks job
      - uses: actions/download-artifact@v4
        with:
          name: sdk-next-${{ needs.rc-version.outputs.rc_version }}
          path: dist

      # Remove the prepare script to avoid running it during npm publish
      - name: Remove prepare script
        run: npm pkg delete scripts.prepare

      # Set the RC version in package.json for publishing
      # This is a local change only and not committed to the repository
      - name: RC version bump
        run: |
          npm version ${{ needs.rc-version.outputs.rc_version }} --no-git-tag-version

      # Publish the package to npm with the '@next' tag
      - name: Publish with next tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish --tag next --access public --ignore-scripts
